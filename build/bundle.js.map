{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/diacritics/index.js","../../node_modules/phone/dist/data/country_phone_data.js","../../node_modules/phone/dist/lib/utility.js","../../node_modules/phone/dist/index.js","../../node_modules/i18n-iso-countries/index.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = [\n    {\n        alpha2: 'US',\n        alpha3: 'USA',\n        country_code: '1',\n        country_name: 'United States',\n        mobile_begin_with: ['201', '202', '203', '205', '206', '207', '208', '209', '210', '212', '213', '214', '215',\n            '216', '217', '218', '219', '220', '223', '224', '225', '227', '228', '229', '231', '234', '239', '240',\n            '248', '251', '252', '253', '254', '256', '260', '262', '267', '269', '270', '272', '274', '276', '278',\n            '281', '283', '301', '302', '303', '304', '305', '307', '308', '309', '310', '312', '313', '314', '315',\n            '316', '317', '318', '319', '320', '321', '323', '325', '327', '330', '331', '332', '334', '336', '337',\n            '339', '341', '346', '347', '351', '352', '360', '361', '364', '369', '380', '385', '386', '401', '402',\n            '404', '405', '406', '407', '408', '409', '410', '412', '413', '414', '415', '417', '419', '423', '424',\n            '425', '430', '432', '434', '435', '440', '441', '442', '443', '445', '447', '458', '464', '469', '470', '475',\n            '478', '479', '480', '484', '501', '502', '503', '504', '505', '507', '508', '509', '510', '512', '513',\n            '515', '516', '517', '518', '520', '530', '531', '534', '539', '540', '541', '551', '557', '559', '561',\n            '562', '563', '564', '567', '570', '571', '573', '574', '575', '580', '582', '585', '586', '601', '602',\n            '603', '605', '606', '607', '608', '609', '610', '612', '614', '615', '616', '617', '618', '619', '620',\n            '623', '626', '627', '628', '629', '630', '631', '636', '641', '646', '650', '651', '657', '659', '660',\n            '661', '662', '667', '669', '678', '679', '681', '682', '689', '701', '702', '703', '704', '706', '707',\n            '708', '712', '713', '714', '715', '716', '717', '718', '719', '720', '724', '725', '727', '730', '731',\n            '732', '734', '737', '740', '747', '752', '754', '757', '760', '762', '763', '764', '765', '769', '770',\n            '772', '773', '774', '775', '779', '781', '785', '786', '801', '802', '803', '804', '805', '806', '808',\n            '810', '812', '813', '814', '815', '816', '817', '818', '820', '828', '830', '831', '832', '835', '838', '843', '845',\n            '847', '848', '850', '854', '856', '857', '858', '859', '860', '862', '863', '864', '865', '870', '872',\n            '878', '901', '903', '904', '906', '907', '908', '909', '910', '912', '913', '914', '915', '916', '917',\n            '918', '919', '920', '925', '927', '928', '929', '931', '934', '935', '936', '937', '938', '940', '941', '945',\n            '947', '949', '951', '952', '954', '956', '957', '959', '970', '971', '972', '973', '975', '978', '979',\n            '980', '984', '985', '986', '989', '888', '800', '833', '844', '855', '866', '877', '463', '279'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'AW',\n        alpha3: 'ABW',\n        country_code: '297',\n        country_name: 'Aruba',\n        mobile_begin_with: ['5', '6', '7', '9'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'AF',\n        alpha3: 'AFG',\n        country_code: '93',\n        country_name: 'Afghanistan',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'AO',\n        alpha3: 'AGO',\n        country_code: '244',\n        country_name: 'Angola',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'AI',\n        alpha3: 'AIA',\n        country_code: '1',\n        country_name: 'Anguilla',\n        mobile_begin_with: ['2645', '2647'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'AX',\n        alpha3: 'ALA',\n        country_code: '358',\n        country_name: 'Åland Islands',\n        mobile_begin_with: ['18'],\n        phone_number_lengths: [6, 7, 8]\n    },\n    {\n        alpha2: 'AL',\n        alpha3: 'ALB',\n        country_code: '355',\n        country_name: 'Albania',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'AD',\n        alpha3: 'AND',\n        country_code: '376',\n        country_name: 'Andorra',\n        mobile_begin_with: ['3', '4', '6'],\n        phone_number_lengths: [6]\n    },\n    // {alpha2: \"AN\", alpha3: \"ANT\", country_code: \"599\", country_name: \"Netherlands Antilles\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'AE',\n        alpha3: 'ARE',\n        country_code: '971',\n        country_name: 'United Arab Emirates',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'AR',\n        alpha3: 'ARG',\n        country_code: '54',\n        country_name: 'Argentina',\n        mobile_begin_with: ['1', '2', '3'],\n        phone_number_lengths: [8, 9, 10, 11, 12]\n    },\n    {\n        alpha2: 'AM',\n        alpha3: 'ARM',\n        country_code: '374',\n        country_name: 'Armenia',\n        mobile_begin_with: ['3', '4', '5', '7', '9'],\n        phone_number_lengths: [8]\n    },\n    // http://www.howtocallabroad.com/results.php?callfrom=united_states&callto=american_samoa\n    {\n        alpha2: 'AS',\n        alpha3: 'ASM',\n        country_code: '1',\n        country_name: 'American Samoa',\n        mobile_begin_with: ['684733', '684258'],\n        phone_number_lengths: [10]\n    },\n    // {alpha2: \"AQ\", alpha3: \"ATA\", country_code: \"672\", country_name: \"Antarctica\", mobile_begin_with: [], phone_number_lengths: []},\n    // {alpha2: \"TF\", alpha3: \"ATF\", country_code: \"\", country_name: \"French Southern Territories\", mobile_begin_with: [], phone_number_lengths: []},\n    // http://www.howtocallabroad.com/results.php?callfrom=united_states&callto=antigua_barbuda\n    {\n        alpha2: 'AG',\n        alpha3: 'ATG',\n        country_code: '1',\n        country_name: 'Antigua and Barbuda',\n        mobile_begin_with: ['2687'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'AU',\n        alpha3: 'AUS',\n        country_code: '61',\n        country_name: 'Australia',\n        mobile_begin_with: ['4'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'AT',\n        alpha3: 'AUT',\n        country_code: '43',\n        country_name: 'Austria',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [10, 11, 12, 13, 14]\n    },\n    {\n        alpha2: 'AZ',\n        alpha3: 'AZE',\n        country_code: '994',\n        country_name: 'Azerbaijan',\n        mobile_begin_with: ['4', '5', '6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'BI',\n        alpha3: 'BDI',\n        country_code: '257',\n        country_name: 'Burundi',\n        mobile_begin_with: ['7', '29'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'BE',\n        alpha3: 'BEL',\n        country_code: '32',\n        country_name: 'Belgium',\n        mobile_begin_with: ['4', '3'],\n        phone_number_lengths: [9, 8]\n    },\n    {\n        alpha2: 'BJ',\n        alpha3: 'BEN',\n        country_code: '229',\n        country_name: 'Benin',\n        mobile_begin_with: ['4', '6', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'BF',\n        alpha3: 'BFA',\n        country_code: '226',\n        country_name: 'Burkina Faso',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'BD',\n        alpha3: 'BGD',\n        country_code: '880',\n        country_name: 'Bangladesh',\n        mobile_begin_with: ['1'],\n        phone_number_lengths: [8, 9, 10]\n    },\n    {\n        alpha2: 'BG',\n        alpha3: 'BGR',\n        country_code: '359',\n        country_name: 'Bulgaria',\n        mobile_begin_with: ['87', '88', '89', '98', '99', '43'],\n        phone_number_lengths: [8, 9]\n    },\n    {\n        alpha2: 'BH',\n        alpha3: 'BHR',\n        country_code: '973',\n        country_name: 'Bahrain',\n        mobile_begin_with: ['3'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'BS',\n        alpha3: 'BHS',\n        country_code: '1',\n        country_name: 'Bahamas',\n        mobile_begin_with: ['242'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'BA',\n        alpha3: 'BIH',\n        country_code: '387',\n        country_name: 'Bosnia and Herzegovina',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"BL\", alpha3: \"BLM\", country_code: \"590\", country_name: \"Saint Barthélemy\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'BY',\n        alpha3: 'BLR',\n        country_code: '375',\n        country_name: 'Belarus',\n        mobile_begin_with: ['25', '29', '33', '44'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'BZ',\n        alpha3: 'BLZ',\n        country_code: '501',\n        country_name: 'Belize',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [7]\n    },\n    // http://www.howtocallabroad.com/results.php?callfrom=united_states&callto=bermuda\n    {\n        alpha2: 'BM',\n        alpha3: 'BMU',\n        country_code: '1',\n        country_name: 'Bermuda',\n        mobile_begin_with: ['4413', '4415', '4417'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'BO',\n        alpha3: 'BOL',\n        country_code: '591',\n        country_name: 'Bolivia',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'BR',\n        alpha3: 'BRA',\n        country_code: '55',\n        country_name: 'Brazil',\n        mobile_begin_with: [\n            '119', '129', '139', '149', '159', '169', '179', '189', '199', '219', '229', '249', '279', '289',\n            '319', '329', '339', '349', '359', '379', '389',\n            '419', '429', '439', '449', '459', '469', '479', '489', '499',\n            '519', '539', '549', '559',\n            '619', '629', '639', '649', '659', '669', '679', '689', '699',\n            '719', '739', '749', '759', '779', '799',\n            '819', '829', '839', '849', '859', '869', '879', '889', '899',\n            '919', '929', '939', '949', '959', '969', '979', '989', '999',\n        ],\n        phone_number_lengths: [11]\n    },\n    {\n        alpha2: 'BB',\n        alpha3: 'BRB',\n        country_code: '1',\n        country_name: 'Barbados',\n        mobile_begin_with: ['246'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'BN',\n        alpha3: 'BRN',\n        country_code: '673',\n        country_name: 'Brunei Darussalam',\n        mobile_begin_with: ['7', '8'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'BT',\n        alpha3: 'BTN',\n        country_code: '975',\n        country_name: 'Bhutan',\n        mobile_begin_with: ['17'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"BV\", alpha3: \"BVT\", country_code: \"\", country_name: \"Bouvet Island\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'BW',\n        alpha3: 'BWA',\n        country_code: '267',\n        country_name: 'Botswana',\n        mobile_begin_with: ['71', '72', '73', '74', '75', '76'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'CF',\n        alpha3: 'CAF',\n        country_code: '236',\n        country_name: 'Central African Republic',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [8]\n    },\n    // http://www.howtocallabroad.com/canada/\n    // http://areacode.org/\n    // http://countrycode.org/canada\n    {\n        alpha2: 'CA',\n        alpha3: 'CAN',\n        country_code: '1',\n        country_name: 'Canada',\n        mobile_begin_with: ['204', '226', '236', '249', '250', '289', '306', '343', '365', '367', '403', '416', '418', '431',\n            '437', '438', '450', '506', '514', '519', '548', '579', '581', '587', '600', '604', '613', '639', '647', '705',\n            '709', '778', '780', '807', '819', '825', '867', '873', '902', '905'],\n        phone_number_lengths: [10]\n    },\n    // {alpha2: \"CC\", alpha3: \"CCK\", country_code: \"61\", country_name: \"Cocos (Keeling) Islands\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'CH',\n        alpha3: 'CHE',\n        country_code: '41',\n        country_name: 'Switzerland',\n        mobile_begin_with: ['74', '75', '76', '77', '78', '79'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'CL',\n        alpha3: 'CHL',\n        country_code: '56',\n        country_name: 'Chile',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'CN',\n        alpha3: 'CHN',\n        country_code: '86',\n        country_name: 'China',\n        mobile_begin_with: ['13', '14', '15', '17', '18', '19', '16'],\n        phone_number_lengths: [11]\n    },\n    {\n        alpha2: 'CI',\n        alpha3: 'CIV',\n        country_code: '225',\n        country_name: \"Côte D'Ivoire\",\n        mobile_begin_with: ['0', '4', '5', '6', '7', '8'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'CM',\n        alpha3: 'CMR',\n        country_code: '237',\n        country_name: 'Cameroon',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'CD',\n        alpha3: 'COD',\n        country_code: '243',\n        country_name: 'Congo, The Democratic Republic Of The',\n        mobile_begin_with: ['8', '9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'CG',\n        alpha3: 'COG',\n        country_code: '242',\n        country_name: 'Congo',\n        mobile_begin_with: ['0'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'CK',\n        alpha3: 'COK',\n        country_code: '682',\n        country_name: 'Cook Islands',\n        mobile_begin_with: ['5', '7'],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'CO',\n        alpha3: 'COL',\n        country_code: '57',\n        country_name: 'Colombia',\n        mobile_begin_with: ['3'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'KM',\n        alpha3: 'COM',\n        country_code: '269',\n        country_name: 'Comoros',\n        mobile_begin_with: ['3', '76'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'CV',\n        alpha3: 'CPV',\n        country_code: '238',\n        country_name: 'Cape Verde',\n        mobile_begin_with: ['5', '9'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'CR',\n        alpha3: 'CRI',\n        country_code: '506',\n        country_name: 'Costa Rica',\n        mobile_begin_with: ['5', '6', '7', '8'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'CU',\n        alpha3: 'CUB',\n        country_code: '53',\n        country_name: 'Cuba',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"CX\", alpha3: \"CXR\", country_code: \"61\", country_name: \"Christmas Island\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'KY',\n        alpha3: 'CYM',\n        country_code: '1',\n        country_name: 'Cayman Islands',\n        mobile_begin_with: ['345'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'CY',\n        alpha3: 'CYP',\n        country_code: '357',\n        country_name: 'Cyprus',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'CZ',\n        alpha3: 'CZE',\n        country_code: '420',\n        country_name: 'Czech Republic',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'DE',\n        alpha3: 'DEU',\n        country_code: '49',\n        country_name: 'Germany',\n        mobile_begin_with: ['15', '16', '17'],\n        phone_number_lengths: [10, 11]\n    },\n    {\n        alpha2: 'DJ',\n        alpha3: 'DJI',\n        country_code: '253',\n        country_name: 'Djibouti',\n        mobile_begin_with: ['77'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'DM',\n        alpha3: 'DMA',\n        country_code: '1',\n        country_name: 'Dominica',\n        mobile_begin_with: ['767'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'DK',\n        alpha3: 'DNK',\n        country_code: '45',\n        country_name: 'Denmark',\n        mobile_begin_with: ['2', '30', '31', '40', '41', '42', '50', '51', '52', '53', '60', '61', '71', '81', '91', '92', '93'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'DO',\n        alpha3: 'DOM',\n        country_code: '1',\n        country_name: 'Dominican Republic',\n        mobile_begin_with: ['809', '829', '849'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'DZ',\n        alpha3: 'DZA',\n        country_code: '213',\n        country_name: 'Algeria',\n        mobile_begin_with: ['5', '6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'EC',\n        alpha3: 'ECU',\n        country_code: '593',\n        country_name: 'Ecuador',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'EG',\n        alpha3: 'EGY',\n        country_code: '20',\n        country_name: 'Egypt',\n        mobile_begin_with: ['1'],\n        phone_number_lengths: [10, 8]\n    },\n    {\n        alpha2: 'ER',\n        alpha3: 'ERI',\n        country_code: '291',\n        country_name: 'Eritrea',\n        mobile_begin_with: ['1', '7', '8'],\n        phone_number_lengths: [7]\n    },\n    // {alpha2: \"EH\", alpha3: \"ESH\", country_code: \"212\", country_name: \"Western Sahara\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'ES',\n        alpha3: 'ESP',\n        country_code: '34',\n        country_name: 'Spain',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'EE',\n        alpha3: 'EST',\n        country_code: '372',\n        country_name: 'Estonia',\n        mobile_begin_with: ['5', '81', '82', '83'],\n        phone_number_lengths: [7, 8]\n    },\n    {\n        alpha2: 'ET',\n        alpha3: 'ETH',\n        country_code: '251',\n        country_name: 'Ethiopia',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'FI',\n        alpha3: 'FIN',\n        country_code: '358',\n        country_name: 'Finland',\n        mobile_begin_with: ['4', '5'],\n        phone_number_lengths: [9, 10]\n    },\n    {\n        alpha2: 'FJ',\n        alpha3: 'FJI',\n        country_code: '679',\n        country_name: 'Fiji',\n        mobile_begin_with: ['7', '9'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'FK',\n        alpha3: 'FLK',\n        country_code: '500',\n        country_name: 'Falkland Islands (Malvinas)',\n        mobile_begin_with: ['5', '6'],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'FR',\n        alpha3: 'FRA',\n        country_code: '33',\n        country_name: 'France',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'FO',\n        alpha3: 'FRO',\n        country_code: '298',\n        country_name: 'Faroe Islands',\n        mobile_begin_with: [],\n        phone_number_lengths: [6]\n    },\n    {\n        alpha2: 'FM',\n        alpha3: 'FSM',\n        country_code: '691',\n        country_name: 'Micronesia, Federated States Of',\n        mobile_begin_with: [],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'GA',\n        alpha3: 'GAB',\n        country_code: '241',\n        country_name: 'Gabon',\n        mobile_begin_with: ['2', '3', '4', '5', '6', '7'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'GB',\n        alpha3: 'GBR',\n        country_code: '44',\n        country_name: 'United Kingdom',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'GE',\n        alpha3: 'GEO',\n        country_code: '995',\n        country_name: 'Georgia',\n        mobile_begin_with: ['5', '7'],\n        phone_number_lengths: [9]\n    },\n    // {alpha2: \"GG\", alpha3: \"GGY\", country_code: \"44\", country_name: \"Guernsey\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'GH',\n        alpha3: 'GHA',\n        country_code: '233',\n        country_name: 'Ghana',\n        mobile_begin_with: ['2', '5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'GI',\n        alpha3: 'GIB',\n        country_code: '350',\n        country_name: 'Gibraltar',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'GN',\n        alpha3: 'GIN',\n        country_code: '224',\n        country_name: 'Guinea',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'GP',\n        alpha3: 'GLP',\n        country_code: '590',\n        country_name: 'Guadeloupe',\n        mobile_begin_with: ['690'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'GM',\n        alpha3: 'GMB',\n        country_code: '220',\n        country_name: 'Gambia',\n        mobile_begin_with: ['7', '9'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'GW',\n        alpha3: 'GNB',\n        country_code: '245',\n        country_name: 'Guinea-Bissau',\n        mobile_begin_with: ['5', '6', '7'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'GQ',\n        alpha3: 'GNQ',\n        country_code: '240',\n        country_name: 'Equatorial Guinea',\n        mobile_begin_with: ['222', '551'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'GR',\n        alpha3: 'GRC',\n        country_code: '30',\n        country_name: 'Greece',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'GD',\n        alpha3: 'GRD',\n        country_code: '1',\n        country_name: 'Grenada',\n        mobile_begin_with: ['473'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'GL',\n        alpha3: 'GRL',\n        country_code: '299',\n        country_name: 'Greenland',\n        mobile_begin_with: ['2', '4', '5'],\n        phone_number_lengths: [6]\n    },\n    {\n        alpha2: 'GT',\n        alpha3: 'GTM',\n        country_code: '502',\n        country_name: 'Guatemala',\n        mobile_begin_with: ['3', '4', '5'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'GF',\n        alpha3: 'GUF',\n        country_code: '594',\n        country_name: 'French Guiana',\n        mobile_begin_with: ['694'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'GU',\n        alpha3: 'GUM',\n        country_code: '1',\n        country_name: 'Guam',\n        mobile_begin_with: ['671'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'GY',\n        alpha3: 'GUY',\n        country_code: '592',\n        country_name: 'Guyana',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'HK',\n        alpha3: 'HKG',\n        country_code: '852',\n        country_name: 'Hong Kong',\n        mobile_begin_with: ['4', '5', '6', '70', '71', '72', '73', '81', '82', '83', '84', '85', '86', '87', '88', '89', '9'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"HM\", alpha3: \"HMD\", country_code: \"\", country_name: \"Heard and McDonald Islands\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'HN',\n        alpha3: 'HND',\n        country_code: '504',\n        country_name: 'Honduras',\n        mobile_begin_with: ['3', '7', '8', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'HR',\n        alpha3: 'HRV',\n        country_code: '385',\n        country_name: 'Croatia',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8, 9]\n    },\n    {\n        alpha2: 'HT',\n        alpha3: 'HTI',\n        country_code: '509',\n        country_name: 'Haiti',\n        mobile_begin_with: ['3', '4'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'HU',\n        alpha3: 'HUN',\n        country_code: '36',\n        country_name: 'Hungary',\n        mobile_begin_with: ['20', '30', '31', '50', '70'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'ID',\n        alpha3: 'IDN',\n        country_code: '62',\n        country_name: 'Indonesia',\n        mobile_begin_with: ['8'],\n        phone_number_lengths: [9, 10, 11, 12]\n    },\n    // {alpha2: \"IM\", alpha3: \"IMN\", country_code: \"44\", country_name: \"Isle of Man\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'IN',\n        alpha3: 'IND',\n        country_code: '91',\n        country_name: 'India',\n        mobile_begin_with: ['6', '7', '8', '9'],\n        phone_number_lengths: [10]\n    },\n    // {alpha2: \"IO\", alpha3: \"IOT\", country_code: \"246\", country_name: \"British Indian Ocean Territory\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'IE',\n        alpha3: 'IRL',\n        country_code: '353',\n        country_name: 'Ireland',\n        mobile_begin_with: ['82', '83', '84', '85', '86', '87', '88', '89'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'IR',\n        alpha3: 'IRN',\n        country_code: '98',\n        country_name: 'Iran, Islamic Republic Of',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'IQ',\n        alpha3: 'IRQ',\n        country_code: '964',\n        country_name: 'Iraq',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'IS',\n        alpha3: 'ISL',\n        country_code: '354',\n        country_name: 'Iceland',\n        mobile_begin_with: ['6', '7', '8'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'IL',\n        alpha3: 'ISR',\n        country_code: '972',\n        country_name: 'Israel',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'IT',\n        alpha3: 'ITA',\n        country_code: '39',\n        country_name: 'Italy',\n        mobile_begin_with: ['3'],\n        phone_number_lengths: [9, 10]\n    },\n    {\n        alpha2: 'JM',\n        alpha3: 'JAM',\n        country_code: '1',\n        country_name: 'Jamaica',\n        mobile_begin_with: ['876'],\n        phone_number_lengths: [10]\n    },\n    // {alpha2: \"JE\", alpha3: \"JEY\", country_code: \"44\", country_name: \"Jersey\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'JO',\n        alpha3: 'JOR',\n        country_code: '962',\n        country_name: 'Jordan',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'JP',\n        alpha3: 'JPN',\n        country_code: '81',\n        country_name: 'Japan',\n        mobile_begin_with: ['70', '80', '90'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'KZ',\n        alpha3: 'KAZ',\n        country_code: '7',\n        country_name: 'Kazakhstan',\n        mobile_begin_with: ['70', '74', '77'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'KE',\n        alpha3: 'KEN',\n        country_code: '254',\n        country_name: 'Kenya',\n        mobile_begin_with: ['7', '1'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'KG',\n        alpha3: 'KGZ',\n        country_code: '996',\n        country_name: 'Kyrgyzstan',\n        mobile_begin_with: ['5', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'KH',\n        alpha3: 'KHM',\n        country_code: '855',\n        country_name: 'Cambodia',\n        mobile_begin_with: ['1', '6', '7', '8', '9'],\n        phone_number_lengths: [8, 9]\n    },\n    {\n        alpha2: 'KI',\n        alpha3: 'KIR',\n        country_code: '686',\n        country_name: 'Kiribati',\n        mobile_begin_with: ['9', '30'],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'KN',\n        alpha3: 'KNA',\n        country_code: '1',\n        country_name: 'Saint Kitts And Nevis',\n        mobile_begin_with: ['869'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'KR',\n        alpha3: 'KOR',\n        country_code: '82',\n        country_name: 'Korea, Republic of',\n        mobile_begin_with: ['1'],\n        phone_number_lengths: [9, 10]\n    },\n    {\n        alpha2: 'KW',\n        alpha3: 'KWT',\n        country_code: '965',\n        country_name: 'Kuwait',\n        mobile_begin_with: ['5', '6', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'LA',\n        alpha3: 'LAO',\n        country_code: '856',\n        country_name: \"Lao People's Democratic Republic\",\n        mobile_begin_with: ['20'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'LB',\n        alpha3: 'LBN',\n        country_code: '961',\n        country_name: 'Lebanon',\n        mobile_begin_with: ['3', '7'],\n        phone_number_lengths: [7, 8]\n    },\n    {\n        alpha2: 'LR',\n        alpha3: 'LBR',\n        country_code: '231',\n        country_name: 'Liberia',\n        mobile_begin_with: ['4', '5', '6', '7'],\n        phone_number_lengths: [7, 8]\n    },\n    {\n        alpha2: 'LY',\n        alpha3: 'LBY',\n        country_code: '218',\n        country_name: 'Libyan Arab Jamahiriya',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'LC',\n        alpha3: 'LCA',\n        country_code: '1',\n        country_name: 'Saint Lucia',\n        mobile_begin_with: ['758'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'LI',\n        alpha3: 'LIE',\n        country_code: '423',\n        country_name: 'Liechtenstein',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'LK',\n        alpha3: 'LKA',\n        country_code: '94',\n        country_name: 'Sri Lanka',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'LS',\n        alpha3: 'LSO',\n        country_code: '266',\n        country_name: 'Lesotho',\n        mobile_begin_with: ['5', '6'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'LT',\n        alpha3: 'LTU',\n        country_code: '370',\n        country_name: 'Lithuania',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'LU',\n        alpha3: 'LUX',\n        country_code: '352',\n        country_name: 'Luxembourg',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'LV',\n        alpha3: 'LVA',\n        country_code: '371',\n        country_name: 'Latvia',\n        mobile_begin_with: ['2'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MO',\n        alpha3: 'MAC',\n        country_code: '853',\n        country_name: 'Macao',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"MF\", alpha3: \"MAF\", country_code: \"590\", country_name: \"Saint Martin\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'MA',\n        alpha3: 'MAR',\n        country_code: '212',\n        country_name: 'Morocco',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'MC',\n        alpha3: 'MCO',\n        country_code: '377',\n        country_name: 'Monaco',\n        mobile_begin_with: ['4', '6'],\n        phone_number_lengths: [8, 9]\n    },\n    {\n        alpha2: 'MD',\n        alpha3: 'MDA',\n        country_code: '373',\n        country_name: 'Moldova, Republic of',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MG',\n        alpha3: 'MDG',\n        country_code: '261',\n        country_name: 'Madagascar',\n        mobile_begin_with: ['3'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'MV',\n        alpha3: 'MDV',\n        country_code: '960',\n        country_name: 'Maldives',\n        mobile_begin_with: ['7', '9'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'MX',\n        alpha3: 'MEX',\n        country_code: '52',\n        country_name: 'Mexico',\n        mobile_begin_with: [''],\n        phone_number_lengths: [10, 11]\n    },\n    {\n        alpha2: 'MH',\n        alpha3: 'MHL',\n        country_code: '692',\n        country_name: 'Marshall Islands',\n        mobile_begin_with: [],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'MK',\n        alpha3: 'MKD',\n        country_code: '389',\n        country_name: 'Macedonia, the Former Yugoslav Republic Of',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'ML',\n        alpha3: 'MLI',\n        country_code: '223',\n        country_name: 'Mali',\n        mobile_begin_with: ['6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MT',\n        alpha3: 'MLT',\n        country_code: '356',\n        country_name: 'Malta',\n        mobile_begin_with: ['7', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MM',\n        alpha3: 'MMR',\n        country_code: '95',\n        country_name: 'Myanmar',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8, 9, 10]\n    },\n    {\n        alpha2: 'ME',\n        alpha3: 'MNE',\n        country_code: '382',\n        country_name: 'Montenegro',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MN',\n        alpha3: 'MNG',\n        country_code: '976',\n        country_name: 'Mongolia',\n        mobile_begin_with: ['5', '8', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MP',\n        alpha3: 'MNP',\n        country_code: '1',\n        country_name: 'Northern Mariana Islands',\n        mobile_begin_with: ['670'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'MZ',\n        alpha3: 'MOZ',\n        country_code: '258',\n        country_name: 'Mozambique',\n        mobile_begin_with: ['8'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'MR',\n        alpha3: 'MRT',\n        country_code: '222',\n        country_name: 'Mauritania',\n        mobile_begin_with: [],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MS',\n        alpha3: 'MSR',\n        country_code: '1',\n        country_name: 'Montserrat',\n        mobile_begin_with: ['664'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'MQ',\n        alpha3: 'MTQ',\n        country_code: '596',\n        country_name: 'Martinique',\n        mobile_begin_with: ['696'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'MU',\n        alpha3: 'MUS',\n        country_code: '230',\n        country_name: 'Mauritius',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'MW',\n        alpha3: 'MWI',\n        country_code: '265',\n        country_name: 'Malawi',\n        mobile_begin_with: ['77', '88', '99'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'MY',\n        alpha3: 'MYS',\n        country_code: '60',\n        country_name: 'Malaysia',\n        mobile_begin_with: ['1', '6'],\n        phone_number_lengths: [9, 10, 8]\n    },\n    {\n        alpha2: 'YT',\n        alpha3: 'MYT',\n        country_code: '262',\n        country_name: 'Mayotte',\n        mobile_begin_with: ['639'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'NA',\n        alpha3: 'NAM',\n        country_code: '264',\n        country_name: 'Namibia',\n        mobile_begin_with: ['60', '81', '82', '85'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'NC',\n        alpha3: 'NCL',\n        country_code: '687',\n        country_name: 'New Caledonia',\n        mobile_begin_with: ['7', '8', '9'],\n        phone_number_lengths: [6]\n    },\n    {\n        alpha2: 'NE',\n        alpha3: 'NER',\n        country_code: '227',\n        country_name: 'Niger',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'NF',\n        alpha3: 'NFK',\n        country_code: '672',\n        country_name: 'Norfolk Island',\n        mobile_begin_with: ['5', '8'],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'NG',\n        alpha3: 'NGA',\n        country_code: '234',\n        country_name: 'Nigeria',\n        mobile_begin_with: ['70', '80', '81', '90', '91'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'NI',\n        alpha3: 'NIC',\n        country_code: '505',\n        country_name: 'Nicaragua',\n        mobile_begin_with: ['8'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'NU',\n        alpha3: 'NIU',\n        country_code: '683',\n        country_name: 'Niue',\n        mobile_begin_with: [],\n        phone_number_lengths: [4]\n    },\n    {\n        alpha2: 'NL',\n        alpha3: 'NLD',\n        country_code: '31',\n        country_name: 'Netherlands',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'NO',\n        alpha3: 'NOR',\n        country_code: '47',\n        country_name: 'Norway',\n        mobile_begin_with: ['4', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'NP',\n        alpha3: 'NPL',\n        country_code: '977',\n        country_name: 'Nepal',\n        mobile_begin_with: ['97', '98'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'NR',\n        alpha3: 'NRU',\n        country_code: '674',\n        country_name: 'Nauru',\n        mobile_begin_with: ['555'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'NZ',\n        alpha3: 'NZL',\n        country_code: '64',\n        country_name: 'New Zealand',\n        mobile_begin_with: ['2'],\n        phone_number_lengths: [8, 9, 10]\n    },\n    {\n        alpha2: 'OM',\n        alpha3: 'OMN',\n        country_code: '968',\n        country_name: 'Oman',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'PK',\n        alpha3: 'PAK',\n        country_code: '92',\n        country_name: 'Pakistan',\n        mobile_begin_with: ['3'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'PA',\n        alpha3: 'PAN',\n        country_code: '507',\n        country_name: 'Panama',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"PN\", alpha3: \"PCN\", country_code: \"\", country_name: \"Pitcairn\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'PE',\n        alpha3: 'PER',\n        country_code: '51',\n        country_name: 'Peru',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'PH',\n        alpha3: 'PHL',\n        country_code: '63',\n        country_name: 'Philippines',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'PW',\n        alpha3: 'PLW',\n        country_code: '680',\n        country_name: 'Palau',\n        mobile_begin_with: [],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'PG',\n        alpha3: 'PNG',\n        country_code: '675',\n        country_name: 'Papua New Guinea',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'PL',\n        alpha3: 'POL',\n        country_code: '48',\n        country_name: 'Poland',\n        mobile_begin_with: ['4', '5', '6', '7', '8'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'PR',\n        alpha3: 'PRI',\n        country_code: '1',\n        country_name: 'Puerto Rico',\n        mobile_begin_with: ['787', '939'],\n        phone_number_lengths: [10]\n    },\n    // {alpha2: \"KP\", alpha3: \"PRK\", country_code: \"850\", country_name: \"Korea, Democratic People's Republic Of\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'PT',\n        alpha3: 'PRT',\n        country_code: '351',\n        country_name: 'Portugal',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'PY',\n        alpha3: 'PRY',\n        country_code: '595',\n        country_name: 'Paraguay',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'PS',\n        alpha3: 'PSE',\n        country_code: '970',\n        country_name: 'Palestinian Territory, Occupied',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'PF',\n        alpha3: 'PYF',\n        country_code: '689',\n        country_name: 'French Polynesia',\n        mobile_begin_with: ['8'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'QA',\n        alpha3: 'QAT',\n        country_code: '974',\n        country_name: 'Qatar',\n        mobile_begin_with: ['3', '5', '6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'RE',\n        alpha3: 'REU',\n        country_code: '262',\n        country_name: 'Réunion',\n        mobile_begin_with: ['692', '693'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'RO',\n        alpha3: 'ROU',\n        country_code: '40',\n        country_name: 'Romania',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'RU',\n        alpha3: 'RUS',\n        country_code: '7',\n        country_name: 'Russian Federation',\n        mobile_begin_with: ['9', '495'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'RW',\n        alpha3: 'RWA',\n        country_code: '250',\n        country_name: 'Rwanda',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SA',\n        alpha3: 'SAU',\n        country_code: '966',\n        country_name: 'Saudi Arabia',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SD',\n        alpha3: 'SDN',\n        country_code: '249',\n        country_name: 'Sudan',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SS',\n        alpha3: 'SSD',\n        country_code: '211',\n        country_name: 'South Sudan',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SN',\n        alpha3: 'SEN',\n        country_code: '221',\n        country_name: 'Senegal',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SG',\n        alpha3: 'SGP',\n        country_code: '65',\n        country_name: 'Singapore',\n        mobile_begin_with: ['8', '9'],\n        phone_number_lengths: [8]\n    },\n    // {alpha2: \"GS\", alpha3: \"SGS\", country_code: \"500\", country_name: \"South Georgia and the South Sandwich Islands\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'SH',\n        alpha3: 'SHN',\n        country_code: '290',\n        country_name: 'Saint Helena',\n        mobile_begin_with: [],\n        phone_number_lengths: [4]\n    },\n    {\n        alpha2: 'SJ',\n        alpha3: 'SJM',\n        country_code: '47',\n        country_name: 'Svalbard And Jan Mayen',\n        mobile_begin_with: [79],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'SB',\n        alpha3: 'SLB',\n        country_code: '677',\n        country_name: 'Solomon Islands',\n        mobile_begin_with: ['7', '8'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'SL',\n        alpha3: 'SLE',\n        country_code: '232',\n        country_name: 'Sierra Leone',\n        mobile_begin_with: ['21', '25', '30', '33', '34', '40', '44', '50', '55', '76', '77', '78', '79', '88'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'SV',\n        alpha3: 'SLV',\n        country_code: '503',\n        country_name: 'El Salvador',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'SM',\n        alpha3: 'SMR',\n        country_code: '378',\n        country_name: 'San Marino',\n        mobile_begin_with: ['3', '6'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'SO',\n        alpha3: 'SOM',\n        country_code: '252',\n        country_name: 'Somalia',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'SX',\n        alpha3: 'SXM',\n        country_code: '1',\n        country_name: 'Sint Maarten',\n        mobile_begin_with: ['721'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'PM',\n        alpha3: 'SPM',\n        country_code: '508',\n        country_name: 'Saint Pierre And Miquelon',\n        mobile_begin_with: ['55', '41'],\n        phone_number_lengths: [6]\n    },\n    {\n        alpha2: 'RS',\n        alpha3: 'SRB',\n        country_code: '381',\n        country_name: 'Serbia',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8, 9]\n    },\n    {\n        alpha2: 'ST',\n        alpha3: 'STP',\n        country_code: '239',\n        country_name: 'Sao Tome and Principe',\n        mobile_begin_with: ['98', '99'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'SR',\n        alpha3: 'SUR',\n        country_code: '597',\n        country_name: 'Suriname',\n        mobile_begin_with: ['6', '7', '8'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'SK',\n        alpha3: 'SVK',\n        country_code: '421',\n        country_name: 'Slovakia',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'SI',\n        alpha3: 'SVN',\n        country_code: '386',\n        country_name: 'Slovenia',\n        mobile_begin_with: ['3', '4', '5', '6', '7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'SE',\n        alpha3: 'SWE',\n        country_code: '46',\n        country_name: 'Sweden',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    // {alpha2: \"SZ\", alpha3: \"SWZ\", country_code: \"268\", country_name: \"Swaziland\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'SC',\n        alpha3: 'SYC',\n        country_code: '248',\n        country_name: 'Seychelles',\n        mobile_begin_with: ['2'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'SY',\n        alpha3: 'SYR',\n        country_code: '963',\n        country_name: 'Syrian Arab Republic',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    // http://www.howtocallabroad.com/turks-caicos/\n    {\n        alpha2: 'TC',\n        alpha3: 'TCA',\n        country_code: '1',\n        country_name: 'Turks and Caicos Islands',\n        mobile_begin_with: ['6492', '6493', '6494'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'TD',\n        alpha3: 'TCD',\n        country_code: '235',\n        country_name: 'Chad',\n        mobile_begin_with: ['6', '7', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'TG',\n        alpha3: 'TGO',\n        country_code: '228',\n        country_name: 'Togo',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'TH',\n        alpha3: 'THA',\n        country_code: '66',\n        country_name: 'Thailand',\n        mobile_begin_with: ['6', '8', '9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'TJ',\n        alpha3: 'TJK',\n        country_code: '992',\n        country_name: 'Tajikistan',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'TK',\n        alpha3: 'TKL',\n        country_code: '690',\n        country_name: 'Tokelau',\n        mobile_begin_with: [],\n        phone_number_lengths: [4]\n    },\n    {\n        alpha2: 'TM',\n        alpha3: 'TKM',\n        country_code: '993',\n        country_name: 'Turkmenistan',\n        mobile_begin_with: ['6'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'TL',\n        alpha3: 'TLS',\n        country_code: '670',\n        country_name: 'Timor-Leste',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'TO',\n        alpha3: 'TON',\n        country_code: '676',\n        country_name: 'Tonga',\n        mobile_begin_with: [],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'TT',\n        alpha3: 'TTO',\n        country_code: '1',\n        country_name: 'Trinidad and Tobago',\n        mobile_begin_with: ['868'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'TN',\n        alpha3: 'TUN',\n        country_code: '216',\n        country_name: 'Tunisia',\n        mobile_begin_with: ['2', '4', '5', '9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'TR',\n        alpha3: 'TUR',\n        country_code: '90',\n        country_name: 'Turkey',\n        mobile_begin_with: ['5'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'TV',\n        alpha3: 'TUV',\n        country_code: '688',\n        country_name: 'Tuvalu',\n        mobile_begin_with: [],\n        phone_number_lengths: [5]\n    },\n    {\n        alpha2: 'TW',\n        alpha3: 'TWN',\n        country_code: '886',\n        country_name: 'Taiwan',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'TZ',\n        alpha3: 'TZA',\n        country_code: '255',\n        country_name: 'Tanzania, United Republic of',\n        mobile_begin_with: ['7', '6'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'UG',\n        alpha3: 'UGA',\n        country_code: '256',\n        country_name: 'Uganda',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'UA',\n        alpha3: 'UKR',\n        country_code: '380',\n        country_name: 'Ukraine',\n        mobile_begin_with: ['39', '50', '63', '66', '67', '68', '73', '9'],\n        phone_number_lengths: [9]\n    },\n    // {alpha2: \"UM\", alpha3: \"UMI\", country_code: \"\", country_name: \"United States Minor Outlying Islands\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'UY',\n        alpha3: 'URY',\n        country_code: '598',\n        country_name: 'Uruguay',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [8]\n    },\n    {\n        alpha2: 'UZ',\n        alpha3: 'UZB',\n        country_code: '998',\n        country_name: 'Uzbekistan',\n        mobile_begin_with: ['9', '88', '33'],\n        phone_number_lengths: [9]\n    },\n    // {alpha2: \"VA\", alpha3: \"VAT\", country_code: \"39\", country_name: \"Holy See (Vatican City State)\", mobile_begin_with: [], phone_number_lengths: []},\n    {\n        alpha2: 'VC',\n        alpha3: 'VCT',\n        country_code: '1',\n        country_name: 'Saint Vincent And The Grenedines',\n        mobile_begin_with: ['784'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'VE',\n        alpha3: 'VEN',\n        country_code: '58',\n        country_name: 'Venezuela, Bolivarian Republic of',\n        mobile_begin_with: ['4'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'VG',\n        alpha3: 'VGB',\n        country_code: '1',\n        country_name: 'Virgin Islands, British',\n        mobile_begin_with: ['284'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'VI',\n        alpha3: 'VIR',\n        country_code: '1',\n        country_name: 'Virgin Islands, U.S.',\n        mobile_begin_with: ['340'],\n        phone_number_lengths: [10]\n    },\n    {\n        alpha2: 'VN',\n        alpha3: 'VNM',\n        country_code: '84',\n        country_name: 'Viet Nam',\n        mobile_begin_with: ['8', '9', '3', '7', '5'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'VU',\n        alpha3: 'VUT',\n        country_code: '678',\n        country_name: 'Vanuatu',\n        mobile_begin_with: ['5', '7'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'WF',\n        alpha3: 'WLF',\n        country_code: '681',\n        country_name: 'Wallis and Futuna',\n        mobile_begin_with: [],\n        phone_number_lengths: [6]\n    },\n    {\n        alpha2: 'WS',\n        alpha3: 'WSM',\n        country_code: '685',\n        country_name: 'Samoa',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [7]\n    },\n    {\n        alpha2: 'YE',\n        alpha3: 'YEM',\n        country_code: '967',\n        country_name: 'Yemen',\n        mobile_begin_with: ['7'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'ZA',\n        alpha3: 'ZAF',\n        country_code: '27',\n        country_name: 'South Africa',\n        mobile_begin_with: ['1', '2', '3', '4', '5', '6', '7', '8'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'ZM',\n        alpha3: 'ZMB',\n        country_code: '260',\n        country_name: 'Zambia',\n        mobile_begin_with: ['9'],\n        phone_number_lengths: [9]\n    },\n    {\n        alpha2: 'ZW',\n        alpha3: 'ZWE',\n        country_code: '263',\n        country_name: 'Zimbabwe',\n        mobile_begin_with: ['71', '73', '77'],\n        phone_number_lengths: [9]\n    }\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validatePhoneISO3166 = exports.findCountryPhoneDataByPhoneNumber = exports.findPossibleCountryPhoneData = exports.findExactCountryPhoneData = exports.findCountryPhoneDataByCountry = void 0;\nconst country_phone_data_1 = __importDefault(require(\"../data/country_phone_data\"));\n/**\n * @param {string=} country - country code alpha 2 or 3\n * @returns {{country_code: string, alpha2: string, country_name: string, alpha3: string, mobile_begin_with, phone_number_lengths: [number]}|{country_code: string, alpha2: string, country_name: string, alpha3: string, mobile_begin_with: [string, string, string, string], phone_number_lengths: [number]}|{country_code: string, alpha2: string, country_name: string, alpha3: string, mobile_begin_with: [string], phone_number_lengths: [number]}|{country_code: string, alpha2: string, country_name: string, alpha3: string, mobile_begin_with: [string], phone_number_lengths: [number]}|{country_code: string, alpha2: string, country_name: string, alpha3: string, mobile_begin_with: [string, string], phone_number_lengths: [number]}|null}\n */\nfunction findCountryPhoneDataByCountry(country) {\n    // if no country provided, assume it's USA\n    if (!country) {\n        return country_phone_data_1.default.find(countryPhoneDatum => countryPhoneDatum.alpha3 === 'USA') || null;\n    }\n    if (country.length === 2) {\n        return country_phone_data_1.default.find(countryPhoneDatum => country.toUpperCase() === countryPhoneDatum.alpha2) || null;\n    }\n    if (country.length === 3) {\n        return country_phone_data_1.default.find(countryPhoneDatum => country.toUpperCase() === countryPhoneDatum.alpha3) || null;\n    }\n    return country_phone_data_1.default.find(countryPhoneDatum => country.toUpperCase() === countryPhoneDatum.country_name.toUpperCase()) || null;\n}\nexports.findCountryPhoneDataByCountry = findCountryPhoneDataByCountry;\nfunction findExactCountryPhoneData(phoneNumber, validateMobilePrefix, countryPhoneDatum) {\n    // check if the phone number length match any one of the length config\n    const phoneNumberLengthMatched = countryPhoneDatum.phone_number_lengths.some(length => {\n        // as the phone number must include the country code,\n        // but countryPhoneDatum.phone_number_lengths is the length without country code\n        // therefore need to add back countryPhoneDatum.country_code.length to length\n        return (countryPhoneDatum.country_code.length + length === phoneNumber.length);\n    });\n    if (!phoneNumberLengthMatched) {\n        return null;\n    }\n    // if no need to validate mobile prefix or the country data does not have mobile begin with\n    // pick the current one as the answer directly\n    if (!countryPhoneDatum.mobile_begin_with.length || !validateMobilePrefix) {\n        return countryPhoneDatum;\n    }\n    // if the mobile begin with is correct, pick as the correct answer\n    if (countryPhoneDatum.mobile_begin_with.some(beginWith => {\n        return phoneNumber.match(new RegExp('^' + countryPhoneDatum.country_code + beginWith));\n    })) {\n        return countryPhoneDatum;\n    }\n    return null;\n}\nexports.findExactCountryPhoneData = findExactCountryPhoneData;\nfunction findPossibleCountryPhoneData(phoneNumber, validateMobilePrefix, countryPhoneDatum) {\n    // check if the phone number length match any one of the length config\n    const phoneNumberLengthMatched = countryPhoneDatum.phone_number_lengths.some(length => {\n        // the phone number must include the country code\n        // countryPhoneDatum.phone_number_lengths is the length without country code\n        // + 1 is assuming there is an unwanted trunk code prepended to the phone number\n        return (countryPhoneDatum.country_code.length + length + 1 === phoneNumber.length);\n    });\n    if (!phoneNumberLengthMatched) {\n        return null;\n    }\n    // if no need to validate mobile prefix or the country data does not have mobile begin with\n    // pick the current one as the answer directly\n    if (!countryPhoneDatum.mobile_begin_with.length || !validateMobilePrefix) {\n        return countryPhoneDatum;\n    }\n    // if the mobile begin with is correct, pick as the correct answer\n    // match another \\d for the unwanted trunk code prepended to the phone number\n    if (countryPhoneDatum.mobile_begin_with.some(beginWith => {\n        return phoneNumber.match(new RegExp('^' + countryPhoneDatum.country_code + '\\\\d?' + beginWith));\n    })) {\n        return countryPhoneDatum;\n    }\n}\nexports.findPossibleCountryPhoneData = findPossibleCountryPhoneData;\n/**\n * get country phone data by phone number\n * the phone number must include country code as the complete phone number includes the plus sign\n * @param phoneNumber\n * @param validateMobilePrefix\n * @returns {{exactCountryPhoneData: (*), possibleCountryPhoneData: (*)}}\n */\nfunction findCountryPhoneDataByPhoneNumber(phoneNumber, validateMobilePrefix) {\n    let exactCountryPhoneData;\n    let possibleCountryPhoneData;\n    for (const countryPhoneDatum of country_phone_data_1.default) {\n        // if the country code is wrong, skip directly\n        if (!phoneNumber.match(new RegExp('^' + countryPhoneDatum.country_code))) {\n            continue;\n        }\n        // process only if exact match not found yet\n        if (!exactCountryPhoneData) {\n            exactCountryPhoneData = findExactCountryPhoneData(phoneNumber, validateMobilePrefix, countryPhoneDatum);\n        }\n        if (!possibleCountryPhoneData) {\n            possibleCountryPhoneData = findPossibleCountryPhoneData(phoneNumber, validateMobilePrefix, countryPhoneDatum);\n        }\n    }\n    return {\n        exactCountryPhoneData,\n        possibleCountryPhoneData\n    };\n}\nexports.findCountryPhoneDataByPhoneNumber = findCountryPhoneDataByPhoneNumber;\n/**\n *\n * @param {string} phone - phone number without plus sign, with or without country calling code\n * @param {Object} countryPhoneDatum - iso 3166 data\n * @param {String} countryPhoneDatum.country_code - country calling codes\n * @param {Array} countryPhoneDatum.phone_number_lengths - all available phone number lengths for this country\n * @param {Array} countryPhoneDatum.mobile_begin_with - mobile begin with number\n * @param {boolean} validateMobilePrefix - true if we skip mobile begin with checking\n * @param {boolean} plusSign - true if the input contains a plus sign\n * @returns {*|boolean}\n */\nfunction validatePhoneISO3166(phone, countryPhoneDatum, validateMobilePrefix, plusSign) {\n    if (!countryPhoneDatum.phone_number_lengths) {\n        return false;\n    }\n    // remove country calling code from the phone number\n    const phoneWithoutCountry = phone.replace(new RegExp('^' + countryPhoneDatum.country_code), '');\n    // if the phone number have +, countryPhoneDatum detected,\n    // but the phone number does not have country calling code\n    // then should consider the phone number as invalid\n    if (plusSign && countryPhoneDatum && phoneWithoutCountry.length === phone.length) {\n        return false;\n    }\n    const phone_number_lengths = countryPhoneDatum.phone_number_lengths;\n    const mobile_begin_with = countryPhoneDatum.mobile_begin_with;\n    const isLengthValid = phone_number_lengths.some(length => phoneWithoutCountry.length === length);\n    // some country doesn't have mobile_begin_with\n    const isBeginWithValid = mobile_begin_with.length ?\n        mobile_begin_with.some(beginWith => phoneWithoutCountry.match(new RegExp('^' + beginWith))) :\n        true;\n    return isLengthValid && (!validateMobilePrefix || isBeginWithValid);\n}\nexports.validatePhoneISO3166 = validatePhoneISO3166;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.countryPhoneData = exports.phone = void 0;\nconst country_phone_data_1 = __importDefault(require(\"./data/country_phone_data\"));\nexports.countryPhoneData = country_phone_data_1.default;\nconst utility_1 = require(\"./lib/utility\");\n/**\n * @typedef {Object} Option\n * @property {string=} country - country code in ISO3166 alpha 2 or 3\n * @property {boolean=} validateMobilePrefix - true to validate phone number prefix\n * @property {boolean=} strictDetection - true to disable remove truck code and detection logic\n *\n * @param {string} phoneNumber - phone number\n * @param {Option} option\n * @returns {{phoneNumber: string|null, countryIso2: string|null, countryIso3: string|null}}\n */\nfunction phone(phoneNumber, { country = '', validateMobilePrefix = true, strictDetection = false } = {}) {\n    const invalidResult = {\n        isValid: false,\n        phoneNumber: null,\n        countryIso2: null,\n        countryIso3: null,\n        countryCode: null\n    };\n    let processedPhoneNumber = (typeof phoneNumber !== 'string') ? '' : phoneNumber.trim();\n    const processedCountry = (typeof country !== 'string') ? '' : country.trim();\n    const hasPlusSign = Boolean(processedPhoneNumber.match(/^\\+/));\n    // remove any non-digit character, included the +\n    processedPhoneNumber = processedPhoneNumber.replace(/\\D/g, '');\n    let foundCountryPhoneData = (0, utility_1.findCountryPhoneDataByCountry)(processedCountry);\n    if (!foundCountryPhoneData) {\n        return invalidResult;\n    }\n    let defaultCountry = false;\n    // if country provided, only reformat the phone number\n    if (processedCountry) {\n        // remove leading 0s for all countries except 'CIV', 'COG'\n        if (!['CIV', 'COG'].includes(foundCountryPhoneData.alpha3)) {\n            processedPhoneNumber = processedPhoneNumber.replace(/^0+/, '');\n        }\n        // if input 89234567890, RUS, remove the 8\n        if (foundCountryPhoneData.alpha3 === 'RUS' && processedPhoneNumber.length === 11 && processedPhoneNumber.match(/^89/) !== null) {\n            processedPhoneNumber = processedPhoneNumber.replace(/^8+/, '');\n        }\n        // if there's no plus sign and the phone number length is one of the valid length under country phone data\n        // then assume there's no country code, hence add back the country code\n        if (!hasPlusSign && foundCountryPhoneData.phone_number_lengths.includes(processedPhoneNumber.length)) {\n            processedPhoneNumber = `${foundCountryPhoneData.country_code}${processedPhoneNumber}`;\n        }\n    }\n    else if (hasPlusSign) {\n        // if there is a plus sign but no country provided\n        // try to find the country phone data by the phone number\n        const { exactCountryPhoneData, possibleCountryPhoneData } = (0, utility_1.findCountryPhoneDataByPhoneNumber)(processedPhoneNumber, validateMobilePrefix);\n        if (exactCountryPhoneData) {\n            foundCountryPhoneData = exactCountryPhoneData;\n        }\n        else if (possibleCountryPhoneData && !strictDetection) {\n            // for some countries, the phone number usually includes one trunk prefix for local use\n            // The UK mobile phone number ‘07911 123456’ in international format is ‘+44 7911 123456’, so without the first zero.\n            // 8 (AAA) BBB-BB-BB, 0AA-BBBBBBB\n            // the numbers should be omitted in international calls\n            foundCountryPhoneData = possibleCountryPhoneData;\n            processedPhoneNumber = foundCountryPhoneData.country_code + processedPhoneNumber.replace(new RegExp(`^${foundCountryPhoneData.country_code}\\\\d`), '');\n        }\n        else {\n            foundCountryPhoneData = null;\n        }\n    }\n    else if (foundCountryPhoneData.phone_number_lengths.indexOf(processedPhoneNumber.length) !== -1) {\n        // B: no country, no plus sign --> treat it as USA\n        // 1. check length if == 11, or 10, if 10, add +1, then go go D\n        // no plus sign, no country is given. then it must be USA\n        // iso3166 = iso3166_data[0]; already assign by the default value\n        processedPhoneNumber = `1${processedPhoneNumber}`;\n        defaultCountry = true;\n    }\n    if (!foundCountryPhoneData) {\n        return invalidResult;\n    }\n    let validateResult = (0, utility_1.validatePhoneISO3166)(processedPhoneNumber, foundCountryPhoneData, validateMobilePrefix, hasPlusSign);\n    if (validateResult) {\n        return {\n            isValid: true,\n            phoneNumber: `+${processedPhoneNumber}`,\n            countryIso2: foundCountryPhoneData.alpha2,\n            countryIso3: foundCountryPhoneData.alpha3,\n            countryCode: `+${foundCountryPhoneData.country_code}`\n        };\n    }\n    if (defaultCountry) {\n        // also try to validate against CAN for default country, as CAN is also start with +1\n        foundCountryPhoneData = (0, utility_1.findCountryPhoneDataByCountry)('CAN');\n        validateResult = (0, utility_1.validatePhoneISO3166)(processedPhoneNumber, foundCountryPhoneData, validateMobilePrefix, hasPlusSign);\n        if (validateResult) {\n            return {\n                isValid: true,\n                phoneNumber: `+${processedPhoneNumber}`,\n                countryIso2: foundCountryPhoneData.alpha2,\n                countryIso3: foundCountryPhoneData.alpha3,\n                countryCode: `+${foundCountryPhoneData.country_code}`\n            };\n        }\n    }\n    return invalidResult;\n}\nexports.default = phone;\nexports.phone = phone;\n;\n","\"use strict\";\n\nconst codes = require(\"./codes.json\");\nconst supportedLocales = require(\"./supportedLocales.json\");\nconst removeDiacritics = require(\"diacritics\").remove;\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n","<script>\n\t// https://www.npmjs.com/package/i18n-iso-countries Translate countries. Sveinung wrote as help\n\t// https://www.npmjs.com/package/country-codes-list Country-code-list\n\t// https://www.npmjs.com/package/phone Full phone validation, requires entire number to be written.\n\t// Cuntry code list is better for lookups on countryCallingCode.\n\n\timport {phone} from \"phone\"\n\timport countries from \"i18n-iso-countries\"\n\timport en from \"i18n-iso-countries/langs/en.json\"\n\timport no from \"i18n-iso-countries/langs/no.json\"\n\timport sv from \"i18n-iso-countries/langs/sv.json\"\n\timport de from \"i18n-iso-countries/langs/de.json\"\n\timport nb from \"i18n-iso-countries/langs/nb.json\"\n\timport nn from \"i18n-iso-countries/langs/nn.json\"\n\n\t// Register languages\n\tcountries.registerLocale(en);\n\tcountries.registerLocale(no);\n\tcountries.registerLocale(sv);\n\tcountries.registerLocale(de);\n\tcountries.registerLocale(nb);\n\tcountries.registerLocale(nn);\n\n\tlet countryList = countries.langs()\n\tlet countrySelected = \"en\";\n\tlet phoneNumber = \"\";\n\t$: name = GetCountryFromPhoneNumber();\n\n\tfunction GetCountryFromPhoneNumber(){\n\t\tlet code = phone(phoneNumber)?.countryIso2;\n\t\tif(code){\n\t\t\tname = countries.getName(code,countrySelected);\n\t\t}else{\n\t\t\tname = \"\";\n\t\t}\n\t}\n</script>\n\n<main>\n\t<h1>Hello {name || 'None'}!</h1>\n\t<select\n\t\tbind:value={countrySelected}\n\t\ton:change=\"{GetCountryFromPhoneNumber}\"\n\t\t>\n\t\t{#each countryList as country}\n\t\t\t<option value={country}>\n\t\t\t\t{country}\n\t\t\t</option>\n\t\t{/each}\n\t</select>\n\t<input\n\t\tbind:value={phoneNumber}\n\t\tplaceholder=\"enter your phoneNumber\"\n\t\ton:input={GetCountryFromPhoneNumber}>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_input_value","input","select_option","select","i","length","option","__value","selected","selectedIndex","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","alpha2","alpha3","country_code","country_name","mobile_begin_with","phone_number_lengths","__importDefault","this","mod","__esModule","default","defineProperty","exports","country_phone_data_1","require$$0","findExactCountryPhoneData","phoneNumber","validateMobilePrefix","countryPhoneDatum","some","beginWith","match","RegExp","findPossibleCountryPhoneData","country","find","toUpperCase","exactCountryPhoneData","possibleCountryPhoneData","phone","plusSign","phoneWithoutCountry","replace","isLengthValid","isBeginWithValid","strictDetection","invalidResult","isValid","countryIso2","countryIso3","countryCode","processedPhoneNumber","trim","processedCountry","hasPlusSign","Boolean","foundCountryPhoneData","utility_1","findCountryPhoneDataByCountry","defaultCountry","includes","findCountryPhoneDataByPhoneNumber","indexOf","validateResult","validatePhoneISO3166","str","diacriticsMap","replacementList","base","chars","j","removeDiacritics","remove","registeredLocales","numeric","invertedNumeric","formatNumericCode","code","String","slice","hasOwnProperty","object","property","prototype","call","filterNameBy","type","countryNameList","isArray","TypeError","alpha3ToAlpha2","alpha2ToAlpha3","numericToAlpha3","padded","numericToAlpha2","toAlpha2","test","codes","codeInformation","s","localeData","locale","countries","lang","nameList","toLowerCase","err","localeList","undefined","keys","reduce","newLocaleList","localeFilter","normalizeString","string","areSimilar","codenames","mappedName","getAlpha2Code","toAlpha3","getSimpleAlpha2Code","supportedLocales","coerced","toString","wholeText","iterations","detaching","d","registerLocale","en","no","sv","de","nb","nn","countryList","langs","countrySelected","GetCountryFromPhoneNumber","getName","selected_option","querySelector","$destroy","destroy_component","$on","index","splice","$set","$$props","obj","$$set","body"],"mappings":"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ACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,YACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,8CACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,SACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,qCACN,CACDD,KAAM,IACNC,MAAO,WACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,QACN,CACDD,KAAM,IACNC,MAAO,kBACN,CACDD,KAAM,IACNC,MAAO,iBACN,CACDD,KAAM,IACNC,MAAO,uCACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,OACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,IACNC,MAAO,aACN,CACDD,KAAM,IACNC,MAAO,gBACN,CACDD,KAAM,IACNC,MAAO,oBACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,MACN,CACDD,KAAM,IACNC,MAAO,iCACN,CACDD,KAAM,IACNC,MAAO,QACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,KACNC,MAAO,KACN,CACDD,KAAM,MACNC,MAAO,KACN,CACDD,KAAM,MACNC,MAAO,KACN,CACDD,KAAM,I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"}